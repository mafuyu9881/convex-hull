---@sealed
---@description "You can use this storage in all the worlds owned by the creator, and it shares the saved data. The Maker and release environment do not share the storage."
@Misc
script CreatorDataStorage

	---@description "Queries data corresponding to the keys entered. Returns the error code and the inquiry entity when the operation is completed. Script executions are suspended during the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32, DataStorageItemPages BatchGetAndWait(List<string> keys) end

	---@description "Queries data corresponding to the keys entered. This operation is performed asynchronously, and the function passed to the callbackFunction is called with the error code, key, and inquiry entity when the operation is complete.Â "
	---@sealed
	@ExecSpace("ServerOnly")
	method void BatchGetAsync(List<string> keys, func<int32, List<string>, DataStorageItemPages> callbackFunction) end

	---@description "Queries data with the DataStorageKeyInfo entered. Returns the error code and the inquiry entity when the operation is complete. Script executions are suspended during the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32, DataStorageItemPages BatchGetByInfoAndWait(List<DataStorageKeyInfo> keyInfos) end

	---@description "Queries data with the DataStorageKeyInfo entered. This operation is performed asynchronously, and the function passed to the callbackFunction is called with the error code, key, and inquiry entity for inquiry when the operation is complete."
	---@sealed
	@ExecSpace("ServerOnly")
	method void BatchGetByInfoAsync(List<DataStorageKeyInfo> keyInfos, func<int32, List<DataStorageKeyInfo>, DataStorageItemPages> callbackFunction) end

	---@description "Saves data with the keys entered. Returns the keys that succeeded in the error code and storage. Script executions are suspended during the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32, List<string> BatchSetAndWait(Dictionary<string, string> keyValues) end

	---@description "Saves data with the entered keys. This operation is performed asynchronously, and the function passed to the callbackFunction is called with the error code and storage succeeded keys when completing the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method void BatchSetAsync(Dictionary<string, string> keyValues, func<int32, List<string>> callbackFunction) end

	---@description "Saves data with the DataStorageKeyInfo entered. Returns the DataStorageKeyInfo that succeeded in the error code and storage. Script executions are suspended during the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32, List<DataStorageKeyInfo> BatchSetByInfoAndWait(Dictionary<DataStorageKeyInfo, string> keyValues) end

	---@description "Saves data with the entered DataStorageKeyInfo. This operation is performed asynchronously, and the function passed to the callbackFunction is called with the error code and storage succeeded DataStorageKeyInfo when completing the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method void BatchSetByInfoAsync(Dictionary<DataStorageKeyInfo, string> keyValues, func<int32, List<DataStorageKeyInfo>> callbackFunction) end

	---@description "Queries data corresponding to the keys entered. Returns the error code and the data when the operation is complete. Script executions are suspended during the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32, string GetAndWait(string key) end

	---@description "Queries data corresponding to the keys entered. This operation is performed asynchronously, and the function passed to the callbackFunction is called with the error code, key, and data when the operation is complete. "
	---@sealed
	@ExecSpace("ServerOnly")
	method void GetAsync(string key, func<int32, string, string> callbackFunction) end

	---@description "Queries data with the DataStorageKeyInfo entered. You can set the detailed conditions of data to be loaded with DataStorageKeyInfo. Returns the error code and data when the operation is complete. Script executions are suspended during the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32, string GetByInfoAndWait(DataStorageKeyInfo keyInfo) end

	---@description "Queries data with the DataStorageKeyInfo entered. You can set the detailed conditions of data to be loaded with DataStorageKeyInfo. This operation is performed asynchronously, and the function passed to the callbackFunction is called with the error code, DataStorageKeyInfo, and data when the operation is complete. "
	---@sealed
	@ExecSpace("ServerOnly")
	method void GetByInfoAsync(DataStorageKeyInfo keyInfo, func<int32, DataStorageKeyInfo, string> callbackFunction) end

	---@description "Queries data with the tags entered. Returns the error code and inquiry entity when the operation is complete. Script executions are suspended during the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32, DataStorageItemPages GetPagesAndWait(string tag) end

	---@description "Queries data corresponding to the keys entered. This operation is performed asynchronously, and the function passed to the callbackFunction is called with the error code, tag, and returned entity when the operation is complete. "
	---@sealed
	@ExecSpace("ServerOnly")
	method void GetPagesAsync(string tag, func<int32, string, DataStorageItemPages> callbackFunction) end

	---@description "Saves data with the keys entered. Returns the error code when the operation is complete. Script executions are suspended during the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32 SetAndWait(string key, string value) end

	---@description "Saves data with the keys entered. This operation is performed asynchronously, and the function passed to the callbackFunction is called with the error code and key when the operation is complete. "
	---@sealed
	@ExecSpace("ServerOnly")
	method void SetAsync(string key, string value, func<int32, string> callbackFunction) end

	---@description "Saves data with the DataStorageKeyInfo entered. You can set the detailed information with DataStorageKeyInfo. Returns the error code when the operation is complete. Script executions are suspended during the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32 SetByInfoAndWait(DataStorageKeyInfo keyInfo, string value) end

	---@description "Saves data with the DataStorageKeyInfo entered. You can set the detailed information with DataStorageKeyInfo. This operation is performed asynchronously, and the function passed to the callbackFunction is called with the error code and DataStorageKeyInfo when the operation is complete. "
	---@sealed
	@ExecSpace("ServerOnly")
	method void SetByInfoAsync(DataStorageKeyInfo keyInfo, string value, func<int32, DataStorageKeyInfo> callbackFunction) end

	---@description "Saves data with the entered keys. Returns the keys that have been saved along with the error code if all tasks within the call are successful. Script executions are suspended during operation. Function will not be called if any of the tasks fail. You can manipulate up to 20 keys at a time."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32, List<string> TransactSetAndWait(Dictionary<string, string> keyValues) end

	---@description "Saves data with the entered keys. This call is performed asynchronously. The function passed to the callbackFunction is called with the saved keys and error code if all tasks within the call are successful. Function will not be called if any of the tasks fail. You can manipulate up to 20 keys at a time."
	---@sealed
	@ExecSpace("ServerOnly")
	method void TransactSetAsync(Dictionary<string, string> keyValues, func<int32, List<string>> callbackFunction) end

	---@description "Saves data with the entered DataStorageKeyInfo. Returns the DataStorageKeyInfo that succeeded and the error code if all data has been saved. Script executions are suspended during operation. Function will not be called if any of the tasks fail. You can manipulate up to 20 keys at a time."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32, List<DataStorageKeyInfo> TransactSetByInfoAndWait(Dictionary<DataStorageKeyInfo, string> keyValues) end

	---@description "Saves data with the DataStorageKeyInfo entered. This call is performed asynchronously. The function passed to the callbackFunction is called with the error code and the saved DataStorageKeyInfo if all tasks within the call are successful. Function will not be called if any of the tasks fail. You can manipulate up to 20 keys at a time."
	---@sealed
	@ExecSpace("ServerOnly")
	method void TransactSetByInfoAsync(Dictionary<DataStorageKeyInfo, string> keyValues, func<int32, List<DataStorageKeyInfo>> callbackFunction) end

	---@description "Updates the corresponding key value to newValue. When the operation succeeds, it returns the error code and the updated value. If the previous value and expectedValue are different, it returns the error code UpdateApiFailed(2000000) and the previous value. Suspends script executions during performance."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32, string UpdateAndWait(string key, string expectedValue, string newValue) end

	---@description "Updates the corresponding key value to newValue. This operation is performed asynchronously. The function passed to the callbackFunction is called with the error code, key, and updated value when completing the operation. If the previous value and expectedValue are different, it delivers the error code UpdateApiFailed(2000000), key, and the previous value."
	---@sealed
	@ExecSpace("ServerOnly")
	method void UpdateAsync(string key, string expectedValue, string newValue, func<int32, string, string> callbackFunction) end

	---@description "Updates the DataStorageKeyInfo value to newValue. When the operation succeeds, it returns the error code and updated value. If the previous value and expectedValue are different, the error code UpdateApiFailed(2000000) and the previous value are returned. Suspends script executions during performance."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32, string UpdateByInfoAndWait(DataStorageKeyInfo keyInfo, string expectedValue, string newValue) end

	---@description "Updates the DataStorageKeyInfo value to newValue. This operation is performed asynchronously. The function passed to the callbackFunction is called with the error code, DataStorageKeyInfo, and updated value when completing the operation. If the previous value and expectedValue are different, it delivers the error code UpdateApiFailed(2000000) and the previous value."
	---@sealed
	@ExecSpace("ServerOnly")
	method void UpdateByInfoAsync(DataStorageKeyInfo keyInfo, string expectedValue, string newValue, func<int32, DataStorageKeyInfo, string> callbackFunction) end

	---@description "Deletes data with the entered keys. Returns the keys that succeeded in the error code and deletion. Script executions are suspended during the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32, List<string> BatchDeleteAndWait(List<string> keys) end

	---@description "Deletes data with the entered keys. This operation is performed asynchronously, and the function passed to the callbackFunction is called with the deletion, error code succeeded keys when completing the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method void BatchDeleteAsync(List<string> keys, func<int32, List<string>> callbackFunction) end

	---@description "Deletes data with the entered key and returns the error code. Script executions are suspended during the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32 DeleteAndWait(string key) end

	---@description "Deletes data with the entered keys. This operation is performed asynchronously, and the function passed to the callbackFunction is called with the error code and key upon completion of the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method void DeleteAsync(string key, func<int32, string> callbackFunction) end

	---@description "Queries the versions of data corresponding to the keys entered. Returns the error code and inquiry entity when the operation is complete. You can set ascending and descending orders with sortDirection. You can query the version created within the time zone set with minDate and maxDate. Script execution is suspended while performing."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32, DataStorageVersionPages GetVersionsAndWait(string key, SortDirection sortDirection, DateTime minDate, DateTime maxDate) end

	---@description "Queries the versions of data corresponding to the keys entered. You can set ascending and descending orders with sortDirection. You can query the version created within the time zone set with minDate and maxDate. This operation is performed asynchronously, and the function passed to the callbackFunction is called with the error code, key, and inquiry entity when the operation is complete. "
	---@sealed
	@ExecSpace("ServerOnly")
	method void GetVersionsAsync(string key, SortDirection sortDirection, DateTime minDate, DateTime maxDate, func<int32, string, DataStorageVersionPages> callbackFunction) end

	---@description "Deletes data with the keys entered. Returns the keys that have been deleted along with the error code if all tasks within the call are successful. Script executions are suspended during operation. Function will not be called if any of the tasks fail. You can manipulate up to 20 keys at a time."
	---@sealed
	@ExecSpace("ServerOnly")
	method int32, List<string> TransactDeleteAndWait(List<string> keys) end

	---@description "Deletes data with the entered keys. This call is performed asynchronously. The function passed to the callbackFunction is called with the deleted keys and error code if all tasks within the call are successful. Function will not be called if any of the tasks fail. You can manipulate up to 20 keys at a time."
	---@sealed
	@ExecSpace("ServerOnly")
	method void TransactDeleteAsync(List<string> keys, func<int32, List<string>> callbackFunction) end

end