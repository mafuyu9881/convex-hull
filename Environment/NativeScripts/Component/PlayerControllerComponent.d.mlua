---@description "A component related to the Player control. Associates inputs with actions and controls their flow."
@Component
script PlayerControllerComponent extends Component

	---@description "Determines whether to always play the walk animation."
	---@sealed
	@Sync
	property boolean AlwaysMovingState = false

	---@description "Fixes direction of view when moving."
	---@sealed
	@Sync
	property int32 FixedLookAt = 0

	---@description "The direction the character is facing currently based on the axis X. Right if positive, left if negative."
	---@sealed
	@Sync
	property float LookDirectionX = -1

	---@description "The action upon entering the Attack Key."
	method void ActionAttack() end

	---@description "The action upon entering the Crouch Key."
	method void ActionCrouch() end

	---@description "The action on ActionDownJump."
	method void ActionDownJump() end

	---@description "The action upon entering the Portal Key."
	method void ActionEnterPortal() end

	---@description "The action upon entering the Interaction Key."
	method void ActionInteraction(KeyboardKey key, boolean isKeyDown) end

	---@description "The action upon entering the Jump Key."
	method void ActionJump() end

	---@description "The action upon entering the Sit Key."
	method void ActionSit() end

	---@description "Add conditions to trigger an action."
	---@sealed
	@ExecSpace("ClientOnly")
	method void AddCondition(string actionName, func -> boolean conditionFunction) end

	---@description "Returns the names of the actions mapped to the keys."
	---@sealed
	@ExecSpace("ClientOnly")
	method string GetActionName(KeyboardKey key) end

	---@description "Removes the actions connected to the defined keys."
	---@sealed
	@ExecSpace("ClientOnly")
	method void RemoveActionKey(KeyboardKey key) end

	---@description "Removes all actions connected to the defined names."
	---@sealed
	@ExecSpace("ClientOnly")
	method void RemoveAllActionKeyByActionName(string actionName) end

	---@description "Map actions to the keys."
	---@sealed
	@ExecSpace("ClientOnly")
	method void SetActionKey(KeyboardKey key, string actionName, func -> boolean conditionFunction = nil) end

	emitter EmitChangedLookAtEvent(ChangedLookAtEvent event) end

	emitter EmitPlayerActionEvent(PlayerActionEvent event) end

end