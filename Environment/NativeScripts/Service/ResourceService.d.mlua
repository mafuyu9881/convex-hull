---@sealed
---@description "This is a service that provides various functions for resources."
@Service
script ResourceService extends Service

	---@description "Removes all loaded resources from the cache. To free resources from memory, first clear the cache with the ClearCaches() function and then use the UnloadUnusedResources() function."
	---@sealed
	method void ClearCaches() end

	---@description "Returns the resource type for the RUID."
	---@sealed
	method ResourceType GetTypeAndWait(string RUID) end

	---@description "Loads an animation clip resource. Loaded resources are cached, and they will be stored in memory to be reused when needed. Stops script execution while performing."
	---@sealed
	method AnimationClip LoadAnimationClipAndWait(string RUID) end

	---@description "Loads the sprite resource. Loaded resources are cached, and they will be stored in memory to be reused when needed. Stops script execution while performing."
	---@sealed
	method Sprite LoadSpriteAndWait(string RUID) end

	---@description "Preloads the resource RUID specified in the ruidList. Loaded resources are cached, and they will be stored in memory to be reused when needed. It runs asynchronously, and when the operation is complete, the function passed as completeCallback is called."
	---@sealed
	method void PreloadAsync(List<string> ruidList, func completeCallback) end

	---@description "Preload all sprite resources that belong to the tile set. tileSetId is the tile set Id for RectTileMap. Once the work is complete, the function that was delivered with completeCallback is called."
	---@sealed
	method void PreloadTileSetAsync(string tileSetId, func completeCallback) end

	---@description "Removes loaded resources from the cache. ruidList is the RUID of the resources to be removed. To free resources from memory, first use this function to clear the cache, then use the UnloadUnusedResources function."
	---@sealed
	method void RemoveCaches(List<string> ruidList) end

	---@description "Converts RawImage into a sprite, uploads it to the server, and gets an RUID. The first parameter of callbackFunction is the error code, and the second is the issued RUID."
	---@sealed
	@ExecSpace("ClientOnly")
	method void RequestSpriteUploadAsync(RawImage rawImage, func<ResourceUploadError, string> callbackFunction) end

	---@description "Registers a function that determines whether to allow resource uploads when requested by a client. Returns true if the request is granted, false otherwise."
	---@sealed
	@ExecSpace("ServerOnly")
	method void SetSpriteUploadValidationCallback(func<string> -> boolean callbackFunction) end

	---@description "Frees resources from memory. Resources eligible for release are any resources that have not been used for pendingTimeSeconds and have been removed from the cache.  The time units are in seconds."
	---@sealed
	method void UnloadUnusedResources(float pendingTimeSeconds) end

	emitter EmitResourceUploadEvent(ResourceUploadEvent event) end

end