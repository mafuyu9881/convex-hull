---@sealed
---@description "This service processes events between world instances."
@Service
script WorldInstanceService extends Service

	---@description "The Id of the current world instance."
	---@sealed
	readonly property string WorldInstanceId

	---@description "Deletes shared memory. Even if there are world instances using that shared memory, they will be deleted. Suspends script executions during performance."
	---@sealed
	@ExecSpace("ServerOnly")
	method SharedMemoryResultCode DeleteSharedMemoryAndWait(string name) end

	---@description "Deletes shared memory. Even if there are world instances using that shared memory, they will be deleted. The function passed to the callbackFunction is called with the result codes upon completion of the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method void DeleteSharedMemoryAsync(string name, func<SharedMemoryResultCode> callbackFunction) end

	---@description "Confirms which regional server the world instance is running in. Maker always returns Division.Unknown."
	---@sealed
	@ExecSpace("ServerOnly")
	method Division GetDivision() end

	---@description "Returns a shared memory entity between rooms in the same world instance. If a shared memory with the same name already exists, obtains the existing one; if not, creates a new one."
	---@sealed
	@ExecSpace("ServerOnly")
	method SharedMemoryResultCode, WorldInstanceSharedMemory GetSharedMemory(string name) end

	---@description "Inquires about WorldInstanceInfo for the current World in page units. You can see the query result with the returned Entity. The script executions are suspended while performing. This function only works in the release environment. If executed in the Maker, false and nil will be returned."
	---@sealed
	@ReleaseOnly
	@ExecSpace("ServerOnly")
	method boolean, WorldInstanceInfoPages GetWorldInstanceInfoPagesAndWait() end

	---@description "Inquires about WorldInstanceInfo for the current World in page units. You can see the query result with the returned Entity. This operation is performed asynchronously, and whether it is successful or not, the function passed to the callbackFunction is called along with the entity for inquiry when completing the operation."
	---@sealed
	@ReleaseOnly
	@ExecSpace("ServerOnly")
	method void GetWorldInstanceInfoPagesAsync(func<boolean, WorldInstanceInfoPages> callbackFunction) end

	---@description "Finishes using the shared memory. If there are no world instances using that shared memory, it will be deleted automatically. Suspends script executions during performance."
	---@sealed
	@ExecSpace("ServerOnly")
	method SharedMemoryResultCode ReleaseSharedMemoryAndWait(string name) end

	---@description "Finishes using the shared memory. If there are no world instances using that shared memory, it will be deleted automatically. The function passed to the callbackFunction is called with the result codes upon completion of the operation."
	---@sealed
	@ExecSpace("ServerOnly")
	method void ReleaseSharedMemoryAsync(string name, func<SharedMemoryResultCode> callbackFunction) end

	---@description "Sends the event to all world instances. Receivers can receive events by registering a handler on WorldInstanceService. Suspends script executions during performance. You should be cautious, since sending Entity, EntityRef, Component, and ComponentRef in an event may result in invalid values being transmitted."
	---@sealed
	method SendEventRequestResultCode RequestSendEventToAllWorldInstancesAndWait(EventType sendEvent) end

	---@description "Sends an event to all world instances. Receivers can receive events by registering a handler on WorldInstanceService. The function passed to the callbackFunction is called with the result codes and an event entity upon completion of the operation. You should be cautious as sending Entity, EntityRef, Component, and ComponentRef in an event may result in invalid values being transmitted."
	---@sealed
	method void RequestSendEventToAllWorldInstancesAsync(EventType sendEvent, func<SendEventRequestResultCode, EventType> callbackFunction) end

	---@description "Sends the event to the specific world instance. Receivers can receive events by registering a handler on WorldInstanceService. Suspends script executions during performance. You should be cautious, since sending Entity, EntityRef, Component, and ComponentRef in an event may result in invalid values being transmitted."
	---@sealed
	method SendEventRequestResultCode RequestSendEventToWorldInstanceAndWait(EventType sendEvent, string targetWorldInstanceId) end

	---@description "Sends the event to the specific world instance. Receivers can receive events by registering a handler on WorldInstanceService. The function passed to the callbackFunction is called with the result codes and an event entity upon completion of the operation. You should be cautious as sending Entity, EntityRef, Component, and ComponentRef in an Event may result in invalid values being transmitted."
	---@sealed
	method void RequestSendEventToWorldInstanceAsync(EventType sendEvent, string targetWorldInstanceId, func<SendEventRequestResultCode, EventType> callbackFunction) end

	emitter EmitWorldInstanceExcludedEvent(WorldInstanceExcludedEvent event) end

end