---@sealed
---@description "Provides functions related to purchasing products in the world through paid goods."
@Service
script WorldShopService extends Service

	---@description "Acquires the product information. Script executions are suspended during the operation. The release environment allows obtaining the badge information in Waiting, Ing, and End statuses, while the maker environment allows obtaining the badge information in Register, Waiting, Ing, and End statuses."
	---@sealed
	method WorldShopProduct GetProductAndWait(string productId) end

	---@description "Obtains entity that can check the information of products matching the search condition. Script executions are suspended during the operation. Searches all kinds of products when designating nil to productType, while searching all products that can be searched when designating nil to productStatus. The release environment allows the search of products in Register, Ing, Waiting, and End statuses only, while the maker environment allows the search of products in Register, Waiting, Ing, and End statuses."
	---@sealed
	method WorldShopProductPages GetProductsAndWait(WorldShopProductType productType, WorldShopProductStatus productStatus) end

	---@description "Displays the product purchase window. If you are unable to purchase the item, the reason is displayed."
	---@sealed
	@ExecSpace("ClientOnly")
	method void PromptPurchase(string productId) end

	---@description "Specifies the callback that provides the product when a purchase is made. The callback should check the purchase information with the received WorldShopPurchaseInfo and return true if product payment is successful, otherwise false. If the purchase did not return true, the callback that issues a product will run again when the user re-enters the World."
	---@sealed
	@ExecSpace("ServerOnly")
	method void SetProcessPurchaseCallback(func<WorldShopPurchaseInfo> -> boolean callback) end

	---@description "Checks if the user has a pass. Script executions are suspended during the operation. In the World being created, you start without a pass."
	---@sealed
	method boolean UserHasPassAndWait(string userId, string productId) end

end