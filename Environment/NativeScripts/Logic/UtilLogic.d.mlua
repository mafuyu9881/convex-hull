---@sealed
---@description "Provides various utilities."
@Logic
script UtilLogic extends Logic

	---@description "Returns the elapsed time in seconds after initializing the current world. The value of elapsed time after the point for the server to create the world and for the client to connect."
	---@sealed
	property number ElapsedSeconds

	---@description "The value of elapsed time since the world was created on the server."
	---@sealed
	property number ServerElapsedSeconds

	---@description "Checks if the targetString is included in the origin sentences."
	---@sealed
	method boolean Contains(string origin, string targetString) end

	---@description "Creates LocalDateTime based on dateTime and returns it."
	---@sealed
	@ExecSpace("ClientOnly")
	method DateTime GetLocalTimeFrom(DateTime dateTime) end

	---@description "This is a deprecated function. Use the UtcNow property of DateTime."
	---@deprecated
	---@sealed
	method string GetUTCNow() end

	---@description "Adds otherString to the insertIndex position of origin sentences."
	---@sealed
	method string Insert(string origin, int32 insertIndex, string otherString) end

	---@description "Determines if the origin string is nil or an empty string."
	---@sealed
	method boolean IsNilorEmptyString(string origin) end

	---@description "Returns a random real number between 0.0 and 1.0. 1.0 is excluded."
	---@sealed
	method number RandomDouble() end

	---@description "Returns a random non-negative integer. Uses integers up to and including 2147483647."
	---@sealed
	method int32 RandomInteger() end

	---@description "Returns a random integer within a range. The range includes the min and max values."
	---@sealed
	method int32 RandomIntegerRange(int32 min, int32 max) end

	---@description "Finds targetString in the origin statement and deletes the first one it finds."
	---@sealed
	method string Remove(string origin, string targetString) end

	---@description "Replaces the targetString of the origin sentence with the newString."
	---@sealed
	method string Replace(string origin, string targetString, string newString) end

	---@description "Divides the origin sentence by the separator."
	---@sealed
	method table<string> Split(string origin, string separator = "", boolean useSeparatorAsOne = true) end

	---@description "Converts the string into Table form."
	---@sealed
	method void StringToTable(table table, string str) end

	---@description "Converts the string into Table form."
	---@sealed
	method table StringToTable(string str) end

	---@description "Returns from the startIndex of the origin sentence."
	---@sealed
	method string SubString(string origin, int32 startIndex, int32 length = 0) end

	---@description "Converts the Table into string form."
	---@sealed
	method string TableToString(table table) end

	---@description "The characters contained in trimString are removed from before/after."
	---@sealed
	method string Trim(string origin, string trimString = "") end

	---@description "The characters contained in trimString are removed from a tail."
	---@sealed
	method string TrimEnd(string origin, string trimString = "") end

	---@description "The characters contained in trimString are removed from a head."
	---@sealed
	method string TrimStart(string origin, string trimString = "") end

end