@Logic
script Debug extends Logic
	method Vector2 RotateVector(Vector2 v, number deg)
		local rad = math.rad(deg)
		local cosA = math.cos(rad)
		local sinA = math.sin(rad)
		return Vector2(v.x * cosA - v.y * sinA, v.x * sinA + v.y * cosA)
	end
	method number Vector2ToRad(Vector2 v)
		return math.atan(v.y, v.x)
	end
	method number Vector2ToDeg(Vector2 v)
		return math.deg(self:Vector2ToRad(v))
	end

	method integer DrawLine(Entity currentMap, Vector2 startWorldPosition2D, Vector2 endWorldPosition2D, number thickness, Color color, boolean loop)
		local diff2D = startWorldPosition2D - endWorldPosition2D
		return self:DrawOrientedBox(
			currentMap,
			(startWorldPosition2D + endWorldPosition2D) * 0.5,
			Vector2(diff2D:Magnitude(), thickness),
			self:Vector2ToDeg(diff2D),
			color,
			loop
		)
	end

	method integer DrawOrientedBox(Entity currentMap, Vector2 worldPosition2D, Vector2 size, number deg, Color color, boolean loop)
		return _EffectService:PlayEffect(
			"a2cc1cbb89c947c2abdfc62bd80d492b",
			currentMap,
			worldPosition2D:ToVector3(),
			deg,
			size:ToVector3(),
			loop,
			{
				Color = color,
				PlayRate = 4
			}
		)
	end
end